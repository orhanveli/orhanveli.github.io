{"version":3,"sources":["medium-editor-embed-button.js"],"names":["window","document","MediumEditor","serializeFormData","form","nodeName","j","q","Array","prototype","slice","call","elements","forEach","control","name","type","value","checked","multiVal","options","length","selected","push","TemplateEngine","html","result","match","re","reExp","code","cursor","add","line","js","replace","exec","index","substr","Function","apply","err","console","error","message","toDashed","u","toLowerCase","dataset","node","attr","set","fn","self","del","get","arguments","head","setAttribute","getAttribute","removeAttribute","Error","embedButton","action","contentDefault","contentFA","aria","defaults","msgSelectOnlyUrl","msgSelectOnlyEmbadableUrl","msgMakeItVideoEmbed","msgTwitterEmbedModalTitle","msgHideTweetStatusMessage","msgInsertEmbed","oembedProxy","cssEmbedOverlay","cssEmbeds","cssSelected","cssEmbedModal","instagramEmbedScript","twitterEmbedScripts","facebookEmbedScripts","iframelyEmbedScript","vimeoEmbedScripts","init","extensions","button","this","opts","util","extend","embedOpts","doc","$embeds","querySelectorAll","base","_originalSerializerPreEmbeds","serialize","embedSerialize","embedModal","attachEvents","allEmbeds","i","$edtr","innerEmbeds","concat","$elem","querySelector","appendOverlay","on","unselectEmbed","bind","$allEmbeds","selectEmbed","removeEmbed","deleteEmbedOnBackspaceAndDel","ajaxGet","url","callback","failCallback","xmlhttp","XMLHttpRequest","onreadystatechange","readyState","DONE","status","JSON","parse","responseText","open","setRequestHeader","location","href","send","handleClick","e","preventDefault","stopPropagation","formData","range","selection","getSelectionRange","startContainer","endContainer","getClosestTag","getSelectedParentElement","execAction","alert","selectedText","getSelection","saveSelection","indexOf","embedSource","openEmbedModal","getAjaxResultAndPaste","$modal","createElement","template","modalInner","cssEmbedModalInner","cssEmbedModalClose","cssEmbedModalHeader","cssEmbedModalBody","cssEmbedModalForm","cssEmbedModalFooter","innerHTML","body","appendChild","$closeButton","$submitButton","closeAndDestroyModal","submitEmbedModal","undefined","parentNode","removeChild","$form","txt","toString","createRange","text","$overlay","className","endpointUri","restoreSelection","data","deleteContents","insertEmbed","id","guid","$wrapper","tweetAsVideo","$tempObject","$blockquote","classList","remove","hideStatus","outerHTML","stringify","pasteHTML","getHtml","cleanAttrs","cleanTags","$embed","getElementById","checkContentChanged","parseSiteSpecific","loadIfIframely","injectScript","instgrm","Embeds","process","twttr","widgets","load","$target","target","$parent","parentElement","contains","$alreadySelected","elem","isKey","keyCode","BACKSPACE","DELETE","p","insertBefore","$current","getSelectionStart","ownerDocument","caretOffsets","getCaretOffsets","left","$isEmbed","previousSibling","newP","embedExtension","getExtensionByName","key","hasOwnProperty","obj","$data","responseData","originalData","simpleData","$wrap","cloneNode","script","async","onLoad","src","protocol","getElementsByTagName","module","exports","define","amd","EmbedButtonExtension"],"mappings":"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","file":"medium-editor-embed-button.js","sourcesContent":["/**\n * Created by orhanveli on 15/08/16.\n */\n\n(function (window, document, MediumEditor) {\n    \"use strict\";\n\n    function serializeFormData (form) {\n        if (!form || form.nodeName !== \"FORM\") {\n            return;\n        }\n        var j, q = {};\n        Array.prototype.slice.call(form.elements).forEach(function(control) {\n            if (control.name === \"\") {\n                return;\n            }\n            switch (control.nodeName) {\n                case 'INPUT':\n                    switch (control.type) {\n                        case 'text':\n                        case 'hidden':\n                        case 'password':\n                        case 'button':\n                        case 'reset':\n                        case 'submit':\n                            q[control.name] = control.value;\n                            break;\n                        case 'checkbox': //multiple choice checkbox ignored\n                        case 'radio':\n                            if (control.checked) {\n                                q[control.name] = control.value;\n                            }\n                            break;\n                    }\n                    break;\n                case 'file':\n                    break;\n                case 'TEXTAREA':\n                    q[control.name] = control.value;\n                    break;\n                case 'SELECT':\n                    switch (control.type) {\n                        case 'select-one':\n                            q[control.name] = control.value;\n                            break;\n                        case 'select-multiple':\n                            var multiVal = [];\n                            for (j = control.options.length - 1; j >= 0; j = j - 1) {\n                                if (control.options[j].selected) {\n                                    multiVal.push(control.options[j].value);\n                                }\n                            }\n                            q[control.name] = multiVal;\n                            break;\n                    }\n                    break;\n                case 'BUTTON':\n                    switch (control.type) {\n                        case 'reset':\n                        case 'submit':\n                        case 'button':\n                            q[control.name] = control.value;\n                            break;\n                    }\n                    break;\n            }\n        });\n        return q;\n    }\n\n    function TemplateEngine(html, options) {\n        var re = /<%(.+?)%>/g,\n            reExp = /(^( )?(var|if|for|else|switch|case|break|{|}|;))(.*)?/g,\n            code = 'with(obj) { var r=[];\\n',\n            cursor = 0,\n            result,\n            match;\n        var add = function(line, js) {\n            js? (code += line.match(reExp) ? line + '\\n' : 'r.push(' + line + ');\\n') :\n                (code += line != '' ? 'r.push(\"' + line.replace(/\"/g, '\\\\\"') + '\");\\n' : '');\n            return add;\n        }\n        while(match = re.exec(html)) {\n            add(html.slice(cursor, match.index))(match[1], true);\n            cursor = match.index + match[0].length;\n        }\n        add(html.substr(cursor, html.length - cursor));\n        code = (code + 'return r.join(\"\"); }').replace(/[\\r\\t\\n]/g, ' ');\n        try { result = new Function('obj', code).apply(options, [options]); }\n        catch(err) { console.error(\"'\" + err.message + \"'\", \" in \\n\\nCode:\\n\", code, \"\\n\"); }\n        return result;\n    }\n\n    // replace namesLikeThis with names-like-this\n    function toDashed(name) {\n        return name.replace(/([A-Z])/g, function(u) {\n            return \"-\" + u.toLowerCase();\n        });\n    }\n\n    var fn;\n\n    if (typeof document !== \"undefined\" && document.head && document.head.dataset) {\n        fn = {\n            set: function(node, attr, value) {\n                node.dataset[attr] = value;\n            },\n            get: function(node, attr) {\n                return node.dataset[attr];\n            },\n            del: function (node, attr) {\n                delete node.dataset[attr];\n            }\n        };\n    } else {\n        fn = {\n            set: function(node, attr, value) {\n                node.setAttribute('data-' + toDashed(attr), value);\n            },\n            get: function(node, attr) {\n                return node.getAttribute('data-' + toDashed(attr));\n            },\n            del: function (node, attr) {\n                node.removeAttribute('data-' + toDashed(attr));\n            }\n        };\n    }\n\n    function dataset(node, attr, value) {\n        var self = {\n            set: set,\n            get: get,\n            del: del\n        };\n\n        function set(attr, value) {\n            fn.set(node, attr, value);\n            return self;\n        }\n\n        function del(attr) {\n            fn.del(node, attr);\n            return self;\n        }\n\n        function get(attr) {\n            return fn.get(node, attr);\n        }\n\n        if (arguments.length === 3) {\n            return set(attr, value);\n        }\n        if (arguments.length == 2) {\n            return get(attr);\n        }\n\n        return self;\n    }\n\n\n    if (typeof MediumEditor !== \"function\") {\n        throw new Error(\"Medium Editor is not loaded on the page.\");\n    }\n\n    var embedButton = {\n        \"name\": \"embedButton\",\n        \"action\": \"embedAction\",\n        \"contentDefault\": \"E\",\n        \"contentFA\": '<i class=\"fa fa-youtube-play\"></i>',\n        \"aria\": \"Embed media\",\n\n        \"defaults\": {\n            \"msgSelectOnlyUrl\": \"Selected text is not a valid URL!\",\n            \"msgSelectOnlyEmbadableUrl\": \"Selected URL is not supported!\",\n            \"msgMakeItVideoEmbed\": \"Embed video\",\n            \"msgTwitterEmbedModalTitle\": \"Twitter Embed Options\",\n            \"msgHideTweetStatusMessage\": \"Hide tweet text\",\n            \"msgInsertEmbed\": \"Embed ekle\",\n\n            \"oembedProxy\": \"http://iframe.ly/api/oembed?api_key=APIKEY_HERE&url=\",\n\n            \"cssEmbedOverlay\": \"medium-editor-embeds-overlay\",\n            \"cssEmbeds\": \"medium-editor-embeds\",\n            \"cssSelected\": \"medium-editor-embeds-selected\",\n            \"cssEmbedModal\": \"medium-editor-embeds__modal\",\n\n            \"instagramEmbedScript\": \"//platform.instagram.com/en_US/embeds.js\",\n            \"twitterEmbedScripts\": \"//platform.twitter.com/widgets.js\",\n            \"facebookEmbedScripts\": \"//connect.facebook.net/en_US/sdk.js#xfbml=1&version=v2.7\",\n            \"iframelyEmbedScript\": \"//cdn.iframe.ly/embed.js\",\n            \"vimeoEmbedScripts\": \"\"\n        },\n\n        \"init\": function() {\n            MediumEditor.extensions.button.prototype.init.call(this);\n            this.opts = MediumEditor.util.extend({}, this.defaults, this.embedOpts);\n\n            var self = this,\n                doc = self.document,\n                $embeds = doc.querySelectorAll(\".\" + self.opts.cssEmbeds);\n\n            this.base._originalSerializerPreEmbeds = self.base.serialize;\n            this.base.serialize = self.embedSerialize;\n\n            this.base.embedModal = null;\n\n            this.attachEvents();\n\n            if (typeof $embeds === \"undefined\" || $embeds === null || $embeds.length === 0) {\n                return;\n            }\n\n            var allEmbeds = [];\n\n            for (var i = 0; i < self.base.elements.length; i++) {\n                var $edtr = self.base.elements[i],\n                    innerEmbeds = $edtr.querySelectorAll(\".\" + self.opts.cssEmbeds);\n                allEmbeds = allEmbeds.concat(Array.prototype.slice.call(innerEmbeds));\n            }\n\n            for (var i = 0; i < allEmbeds.length; i++) {\n                var $elem = allEmbeds[i];\n                $elem.setAttribute(\"contenteditable\", false);\n                if ($elem.querySelector(\".\" + self.opts.cssEmbedOverlay) === null) {\n                    self.appendOverlay($elem);\n                }\n            }\n        },\n\n        \"attachEvents\": function() {\n            this.on(this.document, \"click\", this.unselectEmbed.bind(this));\n            var $allEmbeds = this.document.querySelectorAll(\".\" + this.opts.cssEmbeds);\n            this.on($allEmbeds, \"click\", this.selectEmbed.bind(this));\n            this.on(this.document, \"keydown\", this.removeEmbed.bind(this));\n            this.on(this.base.elements, \"keydown\", this.deleteEmbedOnBackspaceAndDel.bind(this));\n        },\n\n        \"ajaxGet\": function(url, callback, failCallback) {\n            var xmlhttp = new XMLHttpRequest();\n            xmlhttp.onreadystatechange = function() {\n                if (xmlhttp.readyState === XMLHttpRequest.DONE) {\n                    if (xmlhttp.status === 200) {\n                        callback.apply(xmlhttp, [JSON.parse(xmlhttp.responseText)]);\n                    } else if (xmlhttp.status === 400) {\n                        //console.log('There was an error 400');\n                    } else {\n                        //console.log('something else other than 200 was returned');\n                        if (typeof failCallback !== \"undefined\") {\n                            failCallback.apply(xmlhttp);\n                        }\n                    }\n                }\n            };\n\n            xmlhttp.open(\"GET\", url, true);\n            xmlhttp.setRequestHeader(\"X-Requested-With\", \"XMLHttpRequest\");\n            xmlhttp.setRequestHeader(\"Access-Control-Allow-Origin\", \"*\");\n            xmlhttp.setRequestHeader(\"Referrer\", document.location.href);\n            xmlhttp.send();\n            return xmlhttp;\n        },\n\n        \"handleClick\": function(e) {\n            e.preventDefault();\n            e.stopPropagation();\n            var self = this,\n                formData = {};\n\n            var range = MediumEditor.selection.getSelectionRange(self.document);\n\n            if (range.startContainer.nodeName.toLowerCase() === \"a\" ||\n                range.endContainer.nodeName.toLowerCase() === \"a\" ||\n                MediumEditor.util.getClosestTag(MediumEditor.selection.getSelectedParentElement(range), \"a\")) {\n                return self.execAction(\"unlink\");\n            }\n\n            if (range.startContainer.nodeName.toLowerCase() !== \"#text\" &&\n                range.endContainer.nodeName.toLowerCase() !== \"#text\") {\n                alert(self.opts.msgSelectOnlyUrl);\n                return false;\n            }\n\n            var selectedText = this.getSelection();\n            self.base.saveSelection();\n\n            if (selectedText.indexOf(\"http:\") < 0 && selectedText.indexOf(\"https:\") < 0 ) {\n                alert(self.opts.msgSelectOnlyUrl);\n                return false;\n            }\n\n            formData.selectedText = selectedText;\n\n            if (selectedText.indexOf(\"twitter\") > -1) {\n                formData.embedSource = \"twitter\";\n                self.openEmbedModal(formData);\n                return;\n            }\n            else if (selectedText.indexOf(\"youtube\") > -1) {\n                formData.embedSource = \"youtube\";\n            }\n            else if (selectedText.indexOf(\"instagram\") > -1) {\n                formData.embedSource = \"instagram\";\n            }\n\n            self.getAjaxResultAndPaste(range, formData);\n        },\n\n        \"openEmbedModal\": function (formData) {\n            var self = this,\n                doc = self.document,\n                $modal = doc.createElement(\"div\");\n\n            var template =\n                '<div class=\"<%cssEmbedModal%>\">' +\n                    '<div class=\"<%cssEmbedModalInner%>\">' +\n                        '<a href=\"\" class=\"<%cssEmbedModalClose%>\">&times;</a>' +\n                        '<div class=\"<%cssEmbedModalHeader%>\">' +\n                            '<h2><%msgTwitterEmbedModalTitle%></h2>' +\n                        '</div>' +\n                        '<div class=\"<%cssEmbedModalBody%>\">' +\n                            '<form class=\"<%cssEmbedModalForm%>\">' +\n                                '<input type=\"hidden\" name=\"selectedText\" value=\"<%selectedText%>\" />' +\n                                '<input type=\"hidden\" name=\"embedSource\" value=\"<%embedSource%>\" />';\n\n            switch (formData.embedSource) {\n                case \"twitter\":\n                    template += '<p><label>' +\n                        '<input type=\"checkbox\" name=\"tweetAsVideo\" value=\"true\" />' +\n                        ' <%msgMakeItVideoEmbed%>' +\n                        '</label></p>' +\n                        '<p><label>';\n                    break;\n            }\n\n            template += '</form>' +\n                        '</div>' +\n                        '<div class=\"<%cssEmbedModalFooter%>\">' +\n                            '<button class=\"<%cssEmbedModal%>-submit\"><%msgInsertEmbed%></button>' +\n                        '</div>' +\n                '</div>' +\n                '</div>';\n\n            var modalInner = TemplateEngine(template, {\n                \"cssEmbedModal\": self.opts.cssEmbedModal,\n                \"cssEmbedModalInner\": self.opts.cssEmbedModal + \"-inner\",\n                \"cssEmbedModalClose\": self.opts.cssEmbedModal + \"-close\",\n                \"cssEmbedModalHeader\": self.opts.cssEmbedModal + \"-header\",\n                \"cssEmbedModalBody\": self.opts.cssEmbedModal + \"-body\",\n                \"cssEmbedModalForm\": self.opts.cssEmbedModal + \"-form\",\n                \"cssEmbedModalFooter\": self.opts.cssEmbedModal + \"-footer\",\n\n                \"selectedText\": formData.selectedText,\n                \"embedSource\": formData.embedSource,\n\n                \"msgMakeItVideoEmbed\": self.opts.msgMakeItVideoEmbed,\n                \"msgTwitterEmbedModalTitle\": self.opts.msgTwitterEmbedModalTitle,\n                \"msgInsertEmbed\": self.opts.msgInsertEmbed,\n                \"msgHideTweetStatusMessage\": self.opts.msgHideTweetStatusMessage\n            });\n            $modal.innerHTML = modalInner;\n\n            this.base.embedModal = $modal;\n            doc.body.appendChild($modal);\n            var $closeButton = $modal.querySelector(\".\" + self.opts.cssEmbedModal + \"-close\"),\n                $submitButton = $modal.querySelector(\".\" + self.opts.cssEmbedModal + \"-submit\");\n            this.on($closeButton, \"click\", this.closeAndDestroyModal.bind(this));\n            this.on($submitButton, \"click\", this.submitEmbedModal.bind(this));\n        },\n\n        \"closeAndDestroyModal\": function (e) {\n            e.preventDefault();\n            var self = this,\n                doc = self.document,\n                $modal = doc.querySelector(\".\" + self.opts.cssEmbedModal);\n\n            this.base.embedModal = null;\n            if ($modal !== undefined) {\n                $modal.parentNode.removeChild($modal);\n            }\n        },\n\n        \"submitEmbedModal\": function (e) {\n            e.preventDefault();\n            var self = this,\n                doc = self.document,\n                $modal = doc.querySelector(\".\" + self.opts.cssEmbedModal),\n                $form = $modal.querySelector(\"form\"),\n                range = MediumEditor.selection.getSelectionRange(self.document);\n\n            var formData = serializeFormData($form);\n\n            self.getAjaxResultAndPaste(range, formData);\n            self.closeAndDestroyModal(e);\n        },\n\n        \"getSelection\": function() {\n            var txt = \"\";\n            if (window.getSelection) {\n                txt = window.getSelection().toString();\n            } else if (document.getSelection) {\n                txt = document.getSelection().toString();\n            } else if (document.selection) {\n                txt = document.selection.createRange().text;\n            }\n            return txt;\n        },\n\n        \"appendOverlay\": function($elem) {\n            var $overlay = this.document.createElement(\"div\");\n            $overlay.className = this.opts.cssEmbedOverlay;\n            $elem.appendChild($overlay);\n        },\n\n        \"getAjaxResultAndPaste\": function (range, formData) {\n            var self = this,\n                endpointUri = self.opts.oembedProxy + formData.selectedText;\n\n            self.base.restoreSelection();\n\n            self.ajaxGet(endpointUri,\n                function(data) {\n                    range.deleteContents();\n                    data.url = formData.selectedText,\n                    self.insertEmbed(range, data, formData);\n                });\n        },\n\n        \"insertEmbed\": function(range, data, formData) {\n            var self = this,\n                id = MediumEditor.util.guid(),\n                $wrapper = self.document.createElement(\"div\");\n\n            $wrapper.setAttribute(\"id\", id);\n            $wrapper.setAttribute(\"contenteditable\", false);\n\n            if (typeof formData !== \"undefined\" && formData.embedSource === \"twitter\") {\n                if (formData.tweetAsVideo === \"true\") {\n                    var $tempObject = self.document.createElement(\"div\")\n                    $tempObject.innerHTML = data.html;\n                    var $blockquote = $tempObject.querySelector(\"blockquote\");\n                    $blockquote.classList.remove(\"twitter-tweet\");\n                    $blockquote.classList.add(\"twitter-video\");\n                    if (typeof formData.hideStatus !== \"undefined\" && formData.hideStatus === \"true\") {\n                        dataset($blockquote, \"status\", \"hidden\");\n                    }\n                    else {\n                        dataset($blockquote, \"status\", \"show\");\n                    }\n\n                    data.html = $blockquote.outerHTML;\n                }\n            }\n\n            dataset($wrapper, \"originalResponse\", JSON.stringify(data));\n\n            $wrapper.className = self.opts.cssEmbeds;\n            $wrapper.innerHTML = data.html;\n            self.appendOverlay($wrapper);\n            self.base.pasteHTML(self.getHtml($wrapper),\n                {\n                    cleanAttrs: [],\n                    cleanTags: []\n                });\n            var $embed = self.document.getElementById(id);\n            if ($embed !== null) {\n                var $overlay = $embed.querySelector(\".\" + self.opts.cssEmbedOverlay);\n                this.on($overlay, \"click\", this.selectEmbed.bind(this));\n            }\n            self.base.checkContentChanged();\n\n            self.parseSiteSpecific(data);\n        },\n\n        \"loadIfIframely\": function() {\n            if (typeof this.opts.oembedProxy !== \"undefined\" && this.opts.oembedProxy.indexOf(\"iframely\")) {\n                this.injectScript(this.opts.iframelyEmbedScript);\n            }\n        },\n\n        \"parseSiteSpecific\": function (data) {\n            var self = this;\n\n            if (data.url.indexOf(\"instagr\") > -1) {\n                if (typeof (window.instgrm) === \"undefined\") {\n                    self.injectScript(self.opts.instagramEmbedScript);\n                    return;\n                }\n                window.instgrm.Embeds.process();\n            // } else if (data.url.indexOf(\"facebook\") > -1) {\n            //     if (typeof (window.FB) === \"undefined\") {\n            //         self.injectScript(self.opts.facebookEmbedScripts);\n            //     }\n            //     setTimeout(function() {\n            //         window.FB.XFBML.parse();\n            //     }, 1000);\n            } else if (data.url.indexOf(\"twitter\") > -1) {\n                if (typeof (window.twttr) === \"undefined\") {\n                    self.injectScript(self.opts.twitterEmbedScripts);\n                    return;\n                }\n                window.twttr.widgets.load();\n            }\n            else {\n                self.loadIfIframely();\n            }\n        },\n\n        \"selectEmbed\": function(e) {\n            e.preventDefault();\n            e.stopPropagation();\n            var self = this,\n                $target = e.target,\n                $parent = $target.parentElement;\n\n            if ($parent.classList.contains(self.opts.cssSelected)) {\n                return;\n            }\n\n            var $alreadySelected = self.document.querySelectorAll(\".\" + self.opts.cssEmbeds);\n            if (typeof $alreadySelected !== \"undefined\" && $alreadySelected !== null) {\n                $alreadySelected.forEach(function(elem) {\n                    elem.classList.remove(self.opts.cssSelected);\n                });\n            }\n\n            $parent.classList.add(self.opts.cssSelected);\n        },\n\n        \"unselectEmbed\": function(e) {\n            var self = this,\n                $target = e.target,\n                $embeds = self.document.querySelectorAll(\".\" + self.opts.cssEmbeds);\n\n            if (typeof $embeds === \"undefined\" || $embeds === null || $embeds.length === 0) {\n                return;\n            }\n\n            if ($target.classList.contains(self.opts.cssEmbedOverlay)) {\n                return;\n            }\n\n            //clear all selecteds\n            for (var i = 0; i < $embeds.length; i++) {\n                var $elem = $embeds[i];\n                $elem.classList.remove(self.opts.cssSelected);\n            }\n        },\n\n        \"removeEmbed\": function(e) {\n            var $embed,\n                self = this;\n\n            if (!MediumEditor.util.isKey(e, [MediumEditor.util.keyCode.BACKSPACE, MediumEditor.util.keyCode.DELETE])) {\n                return;\n            }\n\n            $embed = self.document.querySelector(\".\" + self.opts.cssSelected);\n\n            if ($embed === null) {\n                return;\n            }\n\n            e.preventDefault();\n\n            var p = self.document.createElement(\"p\");\n            $embed.parentElement.insertBefore(p, $embed);\n            $embed.parentElement.removeChild($embed);\n        },\n\n        \"deleteEmbedOnBackspaceAndDel\": function(e) {\n            if (!MediumEditor.util.isKey(e, [MediumEditor.util.keyCode.DELETE, MediumEditor.util.keyCode.BACKSPACE])) {\n                return;\n            }\n\n            var $current = MediumEditor.selection.getSelectionStart(this.base.options.ownerDocument),\n                self = this,\n                range = MediumEditor.selection.getSelectionRange(self.document),\n                p = MediumEditor.util.getClosestTag(MediumEditor.selection.getSelectedParentElement(range), \"p\"),\n                caretOffsets = MediumEditor.selection.getCaretOffsets($current);\n\n            if (caretOffsets.left > 0) {\n                return;\n            }\n\n            var $isEmbed = p.previousSibling;\n\n            if (typeof $isEmbed === \"undefined\" ||\n                typeof $isEmbed.classList === \"undefined\" ||\n                !$isEmbed.classList.contains(self.opts.cssEmbeds)) {\n                return;\n            }\n\n            e.preventDefault();\n            e.stopPropagation();\n\n            var newP = self.document.createElement(\"p\");\n            $isEmbed.parentElement.insertBefore(newP, $isEmbed);\n            $isEmbed.parentElement.removeChild($isEmbed);\n        },\n\n        \"embedSerialize\": function() {\n            var self = this,\n                data = self._originalSerializerPreEmbeds(),\n                doc = self.options.ownerDocument,\n                embedExtension = self.getExtensionByName(\"embedButton\");\n\n            for (var key in data) {\n                // skip loop if the property is from prototype\n                if (!data.hasOwnProperty(key)) continue;\n\n                var obj = data[key];\n\n                var $data = doc.createElement(\"div\");\n                $data.innerHTML = obj.value;\n\n                var $embeds = $data.querySelectorAll(\".\" + embedExtension.opts.cssEmbeds);\n\n                if (typeof $embeds !== \"undefined\" && $embeds !== null && $embeds.length > 0) {\n                    for (var i = 0;  i < $embeds.length; i++) {\n                        var $embed = $embeds[i];\n                        var responseData = dataset($embed, \"originalResponse\");\n                        if (responseData && null !== responseData) {\n                            var originalData = JSON.parse(responseData);\n                            $embed.innerHTML = originalData.html;\n                            var simpleData = {\n                                \"html\": originalData.html,\n                                \"url\": originalData.url\n                            };\n                            dataset($embed).set(\"originalResponse\", JSON.stringify(simpleData));\n                        }\n                        else { //Back compatibility\n                            var $overlay = $embed.querySelector(\".\" + embedExtension.opts.cssEmbedOverlay);\n                            if ($overlay !== null) {\n                                $overlay.parentElement.removeChild($overlay);\n                            }\n                        }\n                        $embed.removeAttribute(\"contenteditable\");\n                        $embed.classList.remove(embedExtension.opts.cssSelected);\n                    }\n                }\n                data[key].value = $data.innerHTML;\n            }\n\n            return data;\n        },\n\n        \"getHtml\": function($elem) {\n            var $wrap = this.document.createElement(\"div\");\n            $wrap.appendChild($elem.cloneNode(true));\n            return $wrap.innerHTML;\n        },\n\n        \"injectScript\": function(url) {\n            var script = this.document.createElement(\"script\");\n            script.type = \"text/javascript\";\n            script.async = true;\n            script.onLoad = function() {\n            };\n            script.src = this.document.location.protocol + url;\n            this.document.getElementsByTagName(\"head\")[0].appendChild(script);\n        }\n\n    };\n\n    var embedExtension = MediumEditor.extensions.button.extend(embedButton);\n\n    if (typeof module !== 'undefined' && typeof module.exports !== 'undefined') {\n        module.exports = embedExtension;\n    }\n    else {\n        if (typeof define === 'function' && define.amd) {\n            define([], function() {\n                return embedExtension;\n            });\n        }\n        else {\n            window.EmbedButtonExtension = embedExtension;\n        }\n    }\n\n}(window, document, MediumEditor));"],"sourceRoot":"/source/"}